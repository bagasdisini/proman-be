basePath: /
definitions:
  handler.forgotPasswordForm:
    properties:
      email:
        type: string
    type: object
  handler.loginForm:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handler.registerForm:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
  description: Proman Backend API
  title: Proman Backend
paths:
  /api/forgot-password:
    post:
      consumes:
      - application/json
      operationId: forgot-password
      parameters:
      - description: forgot password json
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.forgotPasswordForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: ForgotPassword
      tags:
      - Auth
  /api/login:
    post:
      consumes:
      - application/json
      operationId: login
      parameters:
      - description: login json
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.loginForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Login
      tags:
      - Auth
  /api/me:
    get:
      consumes:
      - application/json
      operationId: me
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get my info
      tags:
      - Me
  /api/project/count:
    get:
      consumes:
      - application/json
      operationId: project-count
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get project count
      tags:
      - Project
  /api/project/count/type:
    get:
      consumes:
      - application/json
      operationId: project-count-type
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get project count by type
      tags:
      - Project
  /api/register:
    post:
      consumes:
      - application/json
      operationId: register
      parameters:
      - description: register json
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.registerForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Register
      tags:
      - Auth
  /api/task/count:
    get:
      consumes:
      - application/json
      operationId: task-count
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get task count
      tags:
      - Task
  /api/user/count:
    get:
      consumes:
      - application/json
      operationId: user-count
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get user count
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
