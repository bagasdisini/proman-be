basePath: /
definitions:
  auth.forgotPasswordForm:
    properties:
      email:
        type: string
    type: object
  auth.loginForm:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.registerForm:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  me.updateMyPasswordForm:
    properties:
      confirm_password:
        type: string
      new_password:
        type: string
      old_password:
        type: string
      verification_code:
        type: string
    type: object
  schedule.scheduleForm:
    properties:
      contributor:
        type: string
      description:
        type: string
      end_date:
        type: integer
      end_time:
        type: string
      name:
        type: string
      start_date:
        type: integer
      start_time:
        type: string
      type:
        type: string
    type: object
  task.taskForm:
    properties:
      contributor:
        type: string
      description:
        type: string
      end_date:
        type: integer
      name:
        type: string
      project_id:
        type: string
      start_date:
        type: integer
    type: object
info:
  contact: {}
  description: Proman Backend API
  title: Proman Backend
paths:
  /api/forgot-password:
    post:
      consumes:
      - application/json
      operationId: forgot-password
      parameters:
      - description: forgot password json
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.forgotPasswordForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: ForgotPassword
      tags:
      - Auth
  /api/login:
    post:
      consumes:
      - application/json
      operationId: login
      parameters:
      - description: login json
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.loginForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Login
      tags:
      - Auth
  /api/me:
    get:
      consumes:
      - application/json
      operationId: my-profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get my info
      tags:
      - Me
    put:
      consumes:
      - application/json
      operationId: update-my-profile
      parameters:
      - description: name
        in: formData
        name: name
        type: string
      - description: email
        in: formData
        name: email
        type: string
      - description: position
        in: formData
        name: position
        type: string
      - description: phone
        in: formData
        name: phone
        type: string
      - description: avatar
        in: formData
        name: avatar
        type: file
      - description: verification_code
        in: formData
        name: verification_code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Update my profile
      tags:
      - Me
  /api/me/password:
    put:
      consumes:
      - application/json
      operationId: update-my-password
      parameters:
      - description: update my password json
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/me.updateMyPasswordForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Update my password
      tags:
      - Me
  /api/me/project/count:
    get:
      consumes:
      - application/json
      operationId: my-project-count
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get my project count
      tags:
      - Me
  /api/me/project/count/type:
    get:
      consumes:
      - application/json
      operationId: my-project-count-type
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get my project count by type
      tags:
      - Me
  /api/me/projects:
    get:
      consumes:
      - application/json
      operationId: my-projects
      parameters:
      - description: Search by nama or description
        in: query
        name: q
        type: string
      - description: Search by status
        enum:
        - active
        - completed
        - pending
        - cancelled
        in: query
        name: status
        type: string
      - description: Start date
        in: query
        name: start
        type: string
      - description: End date
        in: query
        name: end
        type: string
      - description: Sort
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Page number pagination
        in: query
        name: page
        type: integer
      - description: Limit pagination
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get my projects
      tags:
      - Me
  /api/me/schedules:
    get:
      consumes:
      - application/json
      operationId: my-schedule
      parameters:
      - description: Search by name
        in: query
        name: q
        type: string
      - description: Search by type
        enum:
        - all
        - meeting
        - discussion
        - review
        - presentation
        - etc
        in: query
        name: type
        type: string
      - description: Start date
        in: query
        name: start
        type: string
      - description: End date
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get my schedule
      tags:
      - Me
  /api/me/task/count:
    get:
      consumes:
      - application/json
      operationId: my-task-count
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get my task count
      tags:
      - Me
  /api/me/task/overview:
    get:
      consumes:
      - application/json
      operationId: my-task-overview
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get my task overview
      tags:
      - Me
  /api/me/task/status:
    get:
      consumes:
      - application/json
      operationId: my-task-list-status
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get my task list by status
      tags:
      - Me
  /api/me/tasks:
    get:
      consumes:
      - application/json
      operationId: my-tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get my tasks
      tags:
      - Me
  /api/project:
    post:
      consumes:
      - application/json
      operationId: create-project
      parameters:
      - description: Project name
        in: formData
        name: name
        required: true
        type: string
      - description: Project description
        in: formData
        name: description
        required: true
        type: string
      - description: Project start date
        in: formData
        name: start_date
        required: true
        type: integer
      - description: Project end date
        in: formData
        name: end_date
        required: true
        type: integer
      - description: Project contributor
        in: formData
        name: contributor
        required: true
        type: string
      - description: Project type
        in: formData
        name: type
        required: true
        type: string
      - description: Project logo
        in: formData
        name: logo
        type: file
      - description: Project attachments
        in: formData
        name: attachments
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Create project
      tags:
      - Project
  /api/project/{id}:
    delete:
      consumes:
      - application/json
      operationId: delete-project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Delete project by id
      tags:
      - Project
    get:
      consumes:
      - application/json
      operationId: get-project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get project by id
      tags:
      - Project
  /api/projects:
    get:
      consumes:
      - application/json
      operationId: list-project
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get list of project
      tags:
      - Project
  /api/register:
    post:
      consumes:
      - application/json
      operationId: register
      parameters:
      - description: register json
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.registerForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Register
      tags:
      - Auth
  /api/schedule:
    post:
      consumes:
      - application/json
      operationId: schedule-create
      parameters:
      - description: Schedule data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schedule.scheduleForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Create schedule
      tags:
      - Schedule
  /api/schedules:
    get:
      consumes:
      - application/json
      operationId: list-schedule
      parameters:
      - description: Search by name
        in: query
        name: q
        type: string
      - description: Search by type
        enum:
        - all
        - meeting
        - discussion
        - review
        - presentation
        - etc
        in: query
        name: type
        type: string
      - description: Start date
        in: query
        name: start
        type: string
      - description: End date
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get list of schedule
      tags:
      - Schedule
  /api/task:
    post:
      consumes:
      - application/json
      operationId: task-create
      parameters:
      - description: Task data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/task.taskForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Create task
      tags:
      - Task
  /api/task/{id}:
    delete:
      consumes:
      - application/json
      operationId: task-delete
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Delete task
      tags:
      - Task
  /api/user:
    get:
      consumes:
      - application/json
      operationId: user-latest
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get list users
      tags:
      - User
  /api/user/count:
    get:
      consumes:
      - application/json
      operationId: user-count
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Get user count
      tags:
      - User
  /api/verification-code/{email}:
    post:
      consumes:
      - application/json
      operationId: code-create
      parameters:
      - description: Email User
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BasicAuth: []
      summary: Create verification code
      tags:
      - Code
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
